<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects-rsses on My New Hugo Site</title>
    <link>http://replace-this-with-your-hugo-site.com/projects/index.xml</link>
    <description>Recent content in Projects-rsses on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Oct 2017 21:41:54 +0300</lastBuildDate>
    <atom:link href="http://replace-this-with-your-hugo-site.com/projects/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Modules for VCVRack</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult-modules/</link>
      <pubDate>Fri, 20 Oct 2017 21:41:54 +0300</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult-modules/</guid>
      <description>&lt;p&gt;This is a collection of all the modules that I have created for the virtual modular synthesizer VCVRack.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m glad to publish these modules for free so anyone can use them. Behind every module there are many hours of work (and many litters of coffee). If you enjoy these modules you can support the development by making a donation. As a suggestion, you can send me the amount to buy 1 kg of roasted coffee beans in your country. That will make me very happy.&lt;/p&gt;

&lt;form action=&#34;https://www.paypal.com/cgi-bin/webscr&#34; method=&#34;post&#34; target=&#34;_top&#34;&gt;
&lt;input type=&#34;hidden&#34; name=&#34;cmd&#34; value=&#34;_s-xclick&#34;&gt;
&lt;input type=&#34;hidden&#34; name=&#34;hosted_button_id&#34; value=&#34;RRMY2QPYEZT2S&#34;&gt;
&lt;input type=&#34;image&#34; src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&#34; border=&#34;0&#34; name=&#34;submit&#34; alt=&#34;PayPal - The safer, easier way to pay online!&#34;&gt;
&lt;img alt=&#34;&#34; border=&#34;0&#34; src=&#34;https://www.paypalobjects.com/en_US/i/scr/pixel.gif&#34; width=&#34;1&#34; height=&#34;1&#34;&gt;
&lt;/form&gt;

&lt;h1 id=&#34;filters&#34;&gt;Filters&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Tangents-render.png?raw=true&#34; alt=&#34;Tangents&#34; /&gt;
&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Rescomb-render.png?raw=true&#34; alt=&#34;Rescomb&#34; /&gt;
&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Lateralus-render.png?raw=true&#34; alt=&#34;Lateralus&#34; /&gt;
&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Stabile-render.png?raw=true&#34; alt=&#34;Stabile&#34; /&gt;
&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Tohe-render.png?raw=true&#34; alt=&#34;Tohe&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;tangents&#34;&gt;Tangents&lt;/h3&gt;

&lt;p&gt;This is another module with a long history. Some years ago I got obsessed with the Steiner-Parker filter. I found the original article of Nyle Steiner and I started making models and simulations of it. My obsession calmed a bit when I designed my own &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/projects/vult-analog-steiner-parker/&#34;&gt;Eurorack module&lt;/a&gt;, but one night I found one of the simulation models I made. Immediately I started getting the equations an trying to put them in a simplified form. After making seven models and like 500 simulations, I got a nice set of equation that was simple enough and sounded very cool.&lt;/p&gt;

&lt;p&gt;One big addition I made in this version compared with the hardware version is that this module leaves exposed three inputs (LP, BP and HP). This makes possible to connect three sources and affecting the frequency content for each input differently.&lt;/p&gt;

&lt;h3 id=&#34;rescomb&#34;&gt;Rescomb&lt;/h3&gt;

&lt;p&gt;This is the first module that I designed. I really like Comb filters, so I coded in Vult a very simple version. When I started tweaking the parameters more extremely I found that with an specific feedback it was possible to make it resonate in a nice way and use this filter as an instrument. Rescomb is a weird effect, which in fact I use it more as an instrument than as a filter.&lt;/p&gt;

&lt;h3 id=&#34;lateralus&#34;&gt;Lateralus&lt;/h3&gt;

&lt;p&gt;Lateralus is a diode/ladder filter&amp;hellip; or al least it has the basic structure of one. I started prototyping this filter in my simulator (Wolfram SystemModeler). At the beginning I was just playing with differential equations, and after many tweaks I managed to make it nice sounding an efficient.&lt;/p&gt;

&lt;h3 id=&#34;stabile&#34;&gt;Stabile&lt;/h3&gt;

&lt;p&gt;The story of this filter goes even before the existence of Vult. I implemented the initial version of this filter in a microcontroller. With the years I have made many tweaks an simplifications. In fact this filter is very efficient and the sound is very effective. One addition to this module is the SEM output which provides a SEM-filter-like control.&lt;/p&gt;

&lt;h3 id=&#34;tohe&#34;&gt;Tohe&lt;/h3&gt;

&lt;p&gt;Sometime you just want to slightly change the character of a signal. This module makes just that. If you want a more bass turn it to the left, for more treble to the right. Simple and efficient.&lt;/p&gt;

&lt;h1 id=&#34;units&#34;&gt;Units&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Trummor-render.png?raw=true&#34; alt=&#34;Trummor&#34; /&gt;
&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Debriatus-render.png?raw=true&#34; alt=&#34;Debriatus&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;trummor&#34;&gt;Trummor&lt;/h3&gt;

&lt;p&gt;Trummor is a module that has been in development &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/projects/vult-analog-module/&#34;&gt;(in a different form)&lt;/a&gt; for a long time. I wanted something compact and effective to make drum sounds. But I wanted it to have some &amp;ldquo;feeling&amp;rdquo;. For that reason I started analyzing the schematics of drum machines and reading articles describing the behavior. I made many models an simulations and once I got something that sounded as a &amp;ldquo;good kick drum&amp;rdquo; I started relaxing the parameter restrictions and experimenting with the module. Trummor is one of my favorite modules, and most of the times I don&amp;rsquo;t even use it as a drum.&lt;/p&gt;

&lt;h3 id=&#34;debriatus&#34;&gt;Debriatus&lt;/h3&gt;

&lt;p&gt;This is a collection of distortion algorithms that I have developed over the years. I put one after the other so the input can be transformed into something completely different and that will ring your ears.&lt;/p&gt;

&lt;h1 id=&#34;utilities&#34;&gt;Utilities&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/modlfo/VultModules/blob/master/images/Splie-render.png?raw=true&#34; alt=&#34;Splie&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;splie&#34;&gt;Splie&lt;/h4&gt;

&lt;p&gt;Splie is an utility module that I made because it was handy when developing my modules. Even when VCV provides stackable cables, Splie buffer makes easier to change one input that is connected to multiple outputs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My CNC/3D printer</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/cnc/</link>
      <pubDate>Mon, 03 Jul 2017 08:48:29 +0300</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/cnc/</guid>
      <description>&lt;p&gt;Some time ago I was helping my fiance&amp;rsquo;s family cleaning the basement and in there we found a box with many electric and mechanic components that belonged to her dad.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Within the stuff there were some step motors of different kinds. Three of them were Nema 23 motors, I tested them and they were working correctly. I thought it would be nice doing something with them; the obvious thing was to make a CNC milling or 3D printer.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/StepMotor.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Step Motors&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I have assembled a few 3D printers before, one Huxley, one Mendel, and Printrbot Maker. The only printer I have now is the Printrbot Metal, which I upgraded from the &amp;ldquo;Maker&amp;rdquo; version. All these printers have their strong and weak sides. But they are not good to attach a drill and make a milling machine.&lt;/p&gt;

&lt;p&gt;For this new CNC I wanted to have something robust and cheap. To get it cheap, try to use as many parts as I could find in my local hardware store and buy the remaining parts from china.&lt;/p&gt;

&lt;p&gt;For the electronics, I got from china a package that contained an Arduino Mega + Ramps 1.4 + drivers (all of them clones). This is the typical kit for assembling a regular 3D printer.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/cnc-board.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Step Motors&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;After assembling I needed to check that the Marlin firmware worked correctly. I made a few modifications to the configuration and I got it working. Here&amp;rsquo;s my repository of the code: &lt;a href=&#34;https://github.com/modlfo/Marlin&#34;&gt;Marlin Firmware&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After a few visits to the hardware store and checking which product they had I got a good mental model on how the CNC could look.&lt;/p&gt;

&lt;p&gt;Once I collected all the parts I started designing the model in &lt;a href=&#34;https://www.autodesk.com/products/fusion-360/overview&#34;&gt;Fusion 360&lt;/a&gt;. I have done a few 3D models in Fusion 360 but nothing containing as many parts as this.&lt;/p&gt;

&lt;p&gt;The idea is simple, make three similar axis and assemble them in any configuration.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/Axis.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Model of the axis&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/Axis-real.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Final axis&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;The rails are from a manufacturer called &lt;a href=&#34;https://www.alfer.com&#34;&gt;Alfer&lt;/a&gt; which I found in the hardware store. The layout of these rails is very convenient and I designed all the 3D printed parts following a template that is compatible with them. If all the parts are compatible, it is very easy to assemble them in multiple configurations.&lt;/p&gt;

&lt;p&gt;This is the first prototype I designed:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/Prototype1.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;CNC first prototype&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Here you can see a video of the initial test I made:&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/GCBdWTskWY0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;At this point there are a few parts missing. For example the attachment to mount the drill or the 3D printer head. Right now I don&amp;rsquo;t have access to a 3D printer to print the last parts. But I used a few cable ties to attach the extruder to the axis and I got myself a 3D printer.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tXigDSZATG0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>Monotron Eurorack Mod</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult-analog-monotron/</link>
      <pubDate>Tue, 16 May 2017 19:30:49 +0200</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult-analog-monotron/</guid>
      <description>&lt;p&gt;More than six years after I bought my Korg Monotron, I decided to make a mod to put it in my Eurorack.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-banner.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Monotron-Kills&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;This is something that has been already done before by other persons. A search shows the &lt;a href=&#34;http://pulplogic.com/product/monotron-kit/&#34;&gt;Pulp Logic kit&lt;/a&gt; and also some threads in MuffWiggler. However, I intentionally avoided looking at this pages since I wanted to figure it out by myself. I called my mod Monotron-Kills.&lt;/p&gt;

&lt;p&gt;By looking at the schematics and making a few measurements I defined the necessary things to adapt it. Since the Monotron works in a low voltage my approach was to adapt the input and output voltages to support the plus minus twelve volts of the Eurorack.&lt;/p&gt;

&lt;p&gt;The first step was to remove one capacitor of the Monotron in order to break the connection of the VCO to the VCF. In the picture you can see the cap I removed.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-fix.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;One capacitor removed to break VCO-&amp;gt;VCF&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I also removed the &amp;lsquo;standby/pitch/cuttoff&amp;rsquo; switch in order to break the connections from the LFO to the VCF or VCO. I put in place a wire to keep the Monotron ON the whole time. I removed all the potentiometers in the board and also the volume control. Once all afore mentioned components were removed I soldered wires to get the following inputs/outputs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCO output: the point is labeled on the PCB&lt;/li&gt;
&lt;li&gt;LFO output: labeled on the PCB&lt;/li&gt;
&lt;li&gt;VCF output: this one is taken from one of the pads of the volume control&lt;/li&gt;
&lt;li&gt;VCO Pitch: labeled on the PCB&lt;/li&gt;
&lt;li&gt;VCF Cutoff: labeled on the PCB&lt;/li&gt;
&lt;li&gt;Gate: labeled on the PCB&lt;/li&gt;
&lt;li&gt;VCF input: lower pad of the removed capacitor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using these terminals is possible to get one VCO, VCF and LFO from the Monotron. The following image show the circuit I designed to adapt it.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-kills-schematic.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Schematic of the Eurorack adapter&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Here you can get the &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-kills-schematic.pdf&#34;&gt;PFD version of the schematic&lt;/a&gt;. In the schematic the component U3 represents the Monotron board.&lt;/p&gt;

&lt;p&gt;Since the main circuit used 6 opamps and I had 8 available I decided to add PWM output from the VCO. I also added two jacks to add CV control to the PWM and the VCF.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-pbc.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Panel and adapter board&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Based on this schematic I designed a PCB which I intended to use just for testing purposes. But once I wired all and checked that everything worked I got lazy and didn&amp;rsquo;t tear apart the prototype. So I designed a panel to mount my ugly prototype.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-b.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Prototype mounted to the panel (Monotron side)&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-a.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Prototype mounted to the panel (adapter side)&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Once the Monotron-Kills is mounted you cannot see the mess that lies behind.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-monotron-final.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Monotron-Kills mounted&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Here you can hear a demo of the module.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/3EoyLmH_5hY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;In retrospective, these are some of the things that can be improved:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desing a PCB to mount all pots and jacks. This PCB should make easy to mount the Monotron board and the adapter.&lt;/li&gt;
&lt;li&gt;This module is 8HP (~ 40 mm) and it has too many knobs and jacks. Making the panel 12HP or 14HP would have been better.&lt;/li&gt;
&lt;li&gt;The LFO output should not use decoupling capacitor since this capacitor destroys the signal for very low frequencies.&lt;/li&gt;
&lt;li&gt;The VCF output should have higher gain.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Vult Generic Module</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult-analog-module/</link>
      <pubDate>Wed, 10 May 2017 22:24:08 +0200</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult-analog-module/</guid>
      <description>&lt;p&gt;This is a test module that I use to try different synthesis algorithms coded in Vult. The module uses a Teensy 3.2 and provides Eurorack voltages.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-module-1.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Vult Generic Module&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;To build this module I got a prototyping board from &lt;a href=&#34;http://synovatron.blogspot.se/p/products.html&#34;&gt;Synovatron&lt;/a&gt; that provided jacks, knobs, panel and PCBs where you can solder whatever you want.&lt;/p&gt;

&lt;p&gt;The module uses the analog output of the Teensy and pass it through an amplification stage with two opamps in order to provide voltages in the range -10 to +10 V. Four potentiometers are connected to the analog inputs. The panel provides one gate input (plus a push button) and a few other switches. Unfortunately this module does not support any CV input.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-module-2.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Vult Generic Module&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;The following video shows it in action while running a model of a 909 kick drum.&lt;/p&gt;

&lt;p&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/8ULGrG8E2pg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately this module does not support any CV input.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Steiner-Parker VCF</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult-analog-steiner-parker/</link>
      <pubDate>Thu, 20 Apr 2017 22:30:20 +0200</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult-analog-steiner-parker/</guid>
      <description>&lt;p&gt;This is my version of a Steiner-Parker VCF for Eurorack format. This implementation is based on the design by Yves Usson (Yusynth).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t know the story. I&amp;rsquo;m trying to build my own Eurorack synthesizer&amp;hellip; and by build I mean creating all the modules. Most of the modules (and synthesizers) that I have built are hand-soldered in perfboards. For this module, I wanted something more &amp;ldquo;professional&amp;rdquo; looking. That&amp;rsquo;s why I decided to design and manufacture the PCBs. In this case I used CircuitMaker.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-2.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Vult-Analog Steiner-Parker VCF&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/c74hJdPacnU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;You can find the original design here &lt;a href=&#34;http://yusynth.net/Modular/index_en.html&#34;&gt;Yusynth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The module consist of three boards: a panel, a control board and the analog board. If you want to make your own, you can find my original design files here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://replace-this-with-your-hugo-site.com/other/Steiner-Parker.zip&#34;&gt;Analog Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://replace-this-with-your-hugo-site.com/other/Steiner-Parker-control.zip&#34;&gt;Control Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://replace-this-with-your-hugo-site.com/other/Steiner-Parker-panel.zip&#34;&gt;Panel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-vcf-boards.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;The three boards&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;But before making your own you have to be aware that this initial design is not perfect. So keep reading.&lt;/p&gt;

&lt;h3 id=&#34;building-your-own&#34;&gt;Building your own&lt;/h3&gt;

&lt;p&gt;This are the schematics of the filter:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-diagram.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Steiner-Parker main board&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-control.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Steiner-Parker control board&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;These are the schematics in PDF format &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-diagram.pdf&#34;&gt;main&lt;/a&gt;, &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-control.pdf&#34;&gt;control&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Regarding the components, I got practically all of them from &lt;a href=&#34;https://www.musikding.de&#34;&gt;Musikding&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This filter uses a pair of matched transistors. Yves recommends BC547C or a 2SC1583. In my case I used a THAT300P14 which contains 4 transistors (two of them are unused). If you have a pair of matched transistors you can use them instead. As you can see in the picture below, the trimpots are precision trimpots.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-back.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Main board&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;One mistake that I made in the first (and only) batch of the board was an incorrect trace. The good thing is that it&amp;rsquo;s very easy to fix. I incorrectly connected the feedback of the resonance control to the wrong pin of the opamp. You can see the fix in the picture below.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-fix.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Fix for the first batch of boards&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;My second mistake was when buying the jacks. I designed the PCB for these jacks (Lumberg 1502 03), since I had a few of them:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/jack1.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Matching jacks&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;But the ones I bought were:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/jack2.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Alternative jacks (requires some fixing)&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Since the pins do not match I had to adapt them by cutting the original pins and soldering new pins that matched the originals.&lt;/p&gt;

&lt;p&gt;One part that I didn&amp;rsquo;t have when designing the board was the filter mode selector. In the original design Yves uses 3P4T rotary switch. I was not sure that I could easily find it, therefore I made a big hole in the PCB and exposed the pins (one source and three destinations: LP, BP, HP). That way I could adapt any switch I could get. At the end I used a Mini rotary switch 2P3T from &lt;a href=&#34;https://www.musikding.de/index.php?a=2761&amp;amp;bewertung_anzeigen=1&#34;&gt;Musikding&lt;/a&gt;. Using this switch you can not have the all-pass mode of the filter.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-switch.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Connecting a 2P3T switch&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-steiner-parker-front.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Control board&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Signal Buffer</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult-analog-audio-buffer/</link>
      <pubDate>Thu, 20 Apr 2017 22:08:00 +0200</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult-analog-audio-buffer/</guid>
      <description>&lt;p&gt;This is a very simple module that I made to protect other signal generators just in case I make a mistake. A simple active buffer with a few operational amplifiers.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-active-buffer.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Active signal buffer for Eurorack&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;This is the most basic circuit that you can make with operational amplifiers, but repeated several times.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-active-buffer-schematic.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Schematic of the signal buffer&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;A PDF version of the schematic can be downloaded here &lt;a href=&#34;http://replace-this-with-your-hugo-site.com/images/vult-analog-active-buffer-schematic.pdf&#34;&gt;Schematic&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even when the circuit is simple, it took me about 3 hours to wire it and make the panel.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vult</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/vult/</link>
      <pubDate>Mon, 05 Dec 2016 13:22:37 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/vult/</guid>
      <description>&lt;p&gt;Vult is a simple programming language made to generate high-performance DSP code that can run on small processors like Arduinos.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Vult provides features that simplify developing DSP algorithms, for example audio effects and synthesizers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pla</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/pla/</link>
      <pubDate>Fri, 02 Dec 2016 13:53:14 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/pla/</guid>
      <description>&lt;p&gt;Pla is an OCaml library and ppx syntax extension to create composable templates based on verbatim strings.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Pla creates (at compile-time) fast and easy templates that can be filled out to generate complex text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ModelPlug</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/modelplug/</link>
      <pubDate>Fri, 02 Dec 2016 13:45:39 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/modelplug/</guid>
      <description>&lt;p&gt;ModelPlug is a library for SystemModeler. ModelPlug allows you to connect simulation models with Arduino boards and use them to input/output signals.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>3D Models</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/3dmodels/</link>
      <pubDate>Wed, 05 Oct 2016 16:54:50 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/3dmodels/</guid>
      <description>&lt;p&gt;These are a few models that I have designed for different applications.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;These models are in the Hackafe repository.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/3dmodels.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Clamp for the projector&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/filament-cleaner.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Filament cleaner&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/webcam-cover.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Webcam Cover&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Microbruto</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/microbruto/</link>
      <pubDate>Mon, 02 Dec 2013 14:04:01 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/microbruto/</guid>
      <description>&lt;p&gt;The MicroBruto is a digital synthesizer with controllers inspired by the MicroBrute.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I tried to imitate the functions of the oscillator, the envelope, filter, LFO and most important: the modulation matrix.&lt;/p&gt;

&lt;p&gt;I have been watching demos and reviews of the Arturia MicroBrute and it seems like a very interesting synthesizer. It’s analog, cheap and flexible. But before even thinking about getting one, I wanted to “experience” the user interface. That’s why I decided to make the MicroBruto. ‘Bruto’ in Spanish can be translated as gross or stupid, but I have to clarify that the name does not reflects my option about the synthesizer. I just thought it was funny.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/microbrute.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Arturia MicroBrute&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;The MicroBruto is not an emulation, is just a digital synthesizer with controllers inspired by the MicroBrute. I tried to imitate the functions of the oscillator, the envelope, filter, LFO and most important: the modulation matrix.&lt;/p&gt;

&lt;p&gt;Here you can see a screenshot:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/microbruto.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;MicroBruto&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;The beauty of this synthesizer is that is does not need a manual. That’s why it is a Simplesizer.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mocotron</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/mocotron/</link>
      <pubDate>Sun, 02 Dec 2012 14:04:07 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/mocotron/</guid>
      <description>&lt;p&gt;Mocotron is an imitation of the Monotron synthesizer made in Reaktor.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/monotron.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Monotron&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;I really like this small synthesizer because it sounds very natural. I love the analog sound.&lt;/p&gt;

&lt;p&gt;This is my version:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/mocotron.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Mocotron&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;The whole model was made using Reaktor Core what makes it very cpu-efficient.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/mocotron_internals.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Mocotron internal structure&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Monoblep-Meblitron</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/monoblep-meblitron/</link>
      <pubDate>Fri, 02 Dec 2011 14:04:38 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/monoblep-meblitron/</guid>
      <description>&lt;p&gt;This is a hybrid synthesizer that I hacked during the MIDIHACK 2014 in Stockholm.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This synthesizer combines a Monotron and a Meeblip. Both synthesizers are controlled by a Raspberry Pi which receives OSC messages.&lt;/p&gt;

&lt;h3 id=&#34;the-story&#34;&gt;The story&lt;/h3&gt;

&lt;p&gt;Last May 17-18 I attended to the MIDI HACK, which is by far the coolest Hackathon out there (IMO). Is not that I have been in others, but this one matched perfectly the kind of hacks that I like to make.&lt;/p&gt;

&lt;p&gt;I had a great time surrounded by people with the same obsessions as me: music, electronics and computers. The event was great, it had nice food, a lot of drinks, coffee and the most important thing: the aura.&lt;/p&gt;

&lt;p&gt;At the beginning I had no idea what I was going to build. So I spend the first three hours moving ideas in my brain and trying to come up with something feasible and not repeated. After looking at my bag I decided to do something that I wanted to do two years back…&lt;/p&gt;

&lt;p&gt;I had in my bag a Monotron, a Meeblip and some Arduinos. So I decided to put them together and add some extra sauce by connecting a Raspberry Pi to handle OSC messages.&lt;/p&gt;

&lt;p&gt;After some hours I decided to drop the Raspberry Pi because I couldn’t connect it to the Spotify’s  WIFI but it works fine otherwise.&lt;/p&gt;

&lt;p&gt;This is a picture of the project:&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/monobleep-meeblitron.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Monoblep-Meblitron&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;And this is a more detailed diagram of the connections.&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/monobleep-meeblitron-diagram.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Diagram&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;So, The RPi runs Node.js and connects to the Arduinos by using the Arduino Firmata. One of the Arduinos sends CV signals to the Monotron in order to control the gate, pitch and cutoff. The second Arduino connects to a custom-made board containing knobs, buttons and LEDs.&lt;/p&gt;

&lt;p&gt;The Meeblip is connected by using a standard USB to MIDI converter. The audio of the Meeblip is fed into the Monotron and it uses a potentiometer to control the amount of audio.&lt;/p&gt;

&lt;p&gt;The custom controller is used to adjust a few of the parameters of the Meeblip.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FirmataTest.js</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/firmata-test-js/</link>
      <pubDate>Thu, 02 Dec 2010 14:05:11 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/firmata-test-js/</guid>
      <description>&lt;p&gt;This is a small program that I made to learn/test Atom-shell (now Electron) and Angular.js. This program allows you to communicate and configure Firmata boards like Arduino.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;


&lt;figure class=&#34;center-figure&#34;&gt;
    
        &lt;img src=&#34;http://replace-this-with-your-hugo-site.com/images/firmata-test-js.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Firmata-Test.js screenshot&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Ocaml Firmata</title>
      <link>http://replace-this-with-your-hugo-site.com/projects/ocaml-firmata/</link>
      <pubDate>Wed, 02 Dec 2009 15:57:07 -0600</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/projects/ocaml-firmata/</guid>
      <description>&lt;p&gt;This is a Ocaml library that allows you to access Firmata boards.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The library supports all basic features of the Firmata protocol. I mainly run it on the Rapspberry Pi to communicate with Arduino boards.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>